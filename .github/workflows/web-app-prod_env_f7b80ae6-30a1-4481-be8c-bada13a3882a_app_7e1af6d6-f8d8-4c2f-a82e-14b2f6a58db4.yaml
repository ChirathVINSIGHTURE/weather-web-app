name: >-
  web-app-prod_env_f7b80ae6-30a1-4481-be8c-bada13a3882a_app_7e1af6d6-f8d8-4c2f-a82e-14b2f6a58db4
  Pipeline (Skyu Generated)
'on':
  push:
    tags:
      - v*
  workflow_dispatch: {}
  repository_dispatch:
    types: pipeline_4128dc74-abed-45d9-ad1d-fc22d9cd37b4
env:
  ENCODED_PIPELINE_SECRET: >-
    ${{secrets.SKYUWEBAPPTEST_ENV_F7B80AE630A14481BE8CBADA13A3882A_APP_7E1AF6D6F8D84C2FA82E14B2F6A58DB4_WEBAPPPROD_ENV_F7B80AE630A14481BE8CBADA13A3882A_APP_7E1AF6D6F8D84C2FA82E14B2F6A58DB4}}
  BUILD_ENVIRONEMENT_VERSION: latest
  WEB_APP_S3_BUCKET_NAME: skyu-project-e3630b3f-eda4-4471-ae62-b1abe0bcb96d-webapps
  WEB_APP_INSTALL_DEPS_COMMAND: ' && npm i'
  WEB_APP_BUILD_COMMAND: npm run build
  IMAGE_TAG: ${{github.event.client_payload.commitId || github.sha}}
  DEPLOY_STEP_SHOULD_DEPLOY: 'true'
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Start
        run: >-
          echo " Starting GitHub Action!" && echo "IMAGE_EXISTS_IN_ECR=false" >>
          $GITHUB_ENV
      - name: 'Run :: Checkout repository'
        uses: actions/checkout@v2
      - name: 'Run :: Checkout Specific Commit'
        if: ${{ github.event.client_payload.commitId != null }}
        run: git checkout ${{ github.event.client_payload.commitId }}
      - name: 'Run :: Decoding Secrets'
        run: >-
          echo "${{ env.ENCODED_PIPELINE_SECRET }}" | base64 --decode | jq -r
          'to_entries[] | "\(.key)=\(.value)"' | while read line; do echo
          "$line" >> $GITHUB_ENV; echo "::add-mask::${line#*=}"; done
      - name: 'Run :: Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.roleARN }}
          role-session-name: skyu-pipeline-assume-role-session
          aws-region: ${{ env.region }}
      - name: 'Run :: Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.BUILD_ENVIRONEMENT_VERSION }}
      - name: 'Run :: Install Web App Dependancies'
        run: ${{ env.WEB_APP_INSTALL_DEPS_COMMAND }}
      - name: 'Run :: Build Web App'
        run: ${{ env.WEB_APP_BUILD_COMMAND }} && ls -R
      - name: 'Run :: Sync Web App with S3 bucket'
        run: aws s3 sync ${{ env.WEB_APP_S3_SYNC_URL }}
      - name: 'Run :: Deploy and Notify Resource Service'
        run: |2-

              response=$(curl -d "imageRegistryURL=${{ env.registryURL }}/${{env.REPOSITORY_NAME}}&appVersionId=${{ env.DEPLOYMENT_APP_VERSION_ID }}&tag=${{ env.IMAGE_TAG }}&containerName=${{ env.DEPLOYMENT_CONTAINER_NAME }}&shouldDeploy=${{env.DEPLOY_STEP_SHOULD_DEPLOY}}&pipelineRunId=${{ github.run_id }}&commitDetails[commitHash]=${{ github.sha }}&commitDetails[commitAvatar]=https://github.com/${{ github.event.head_commit.author.name }}.png&commitDetails[commitTime]=${{ github.event.head_commit.timestamp }}&commitDetails[commitMessage]=\"${{ github.event.head_commit.message }}\"&commitDetails[commitUser]=${{ github.event.head_commit.author.name }}" -X PATCH -H 'Authorization: ${{ env.SERVICE_ACC_ACCESS_TOKEN }}' -H 'x-organization-id: ${{ env.DEPLOYMENT_ORGANIZATION_ID }}' -H 'x-project-id: ${{ env.DEPLOYMENT_PROJECT_ID }}' -H 'x-environment-id: ${{ env.DEPLOYMENT_ENVIRONMENT_ID }}' -H 'x-application-id: ${{ env.DEPLOYMENT_APPLICATION_ID }}' -H 'x-auth-by: sa' -H 'Content-Type: application/x-www-form-urlencoded' 'https://api.dev.skyu.io/resource-service/applications/deploy')
              status_code=$?

              if [ $status_code -eq 0 ]; then
                if echo "$response" | grep -q '"success":true'; then
                  echo "SUCCESS :: $response"
                else
                  echo "FAILED :: $response"
                  exit 1
                fi
              else
                echo "Failed to deploy. HTTP status code: $status_code"
                exit 1
              fi
            
